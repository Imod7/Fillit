/* ************************************************************************** */
/*                                                                            */
/*                                                        ::::::::            */
/*   ft_isvalid.c                                       :+:    :+:            */
/*                                                     +:+                    */
/*   By: ravan-de <marvin@codam.nl>                   +#+                     */
/*                                                   +#+                      */
/*   Created: 2019/04/30 10:58:23 by ravan-de      #+#    #+#                 */
/*   Updated: 2019/05/10 15:18:15 by ravan-de      ########   odam.nl         */
/*                                                                            */
/* ************************************************************************** */

#include "get_next_line.h"
#include "libft.h"
#include <stdlib.h>
#include <unistd.h>

char	*ft_get(char **blok)
{
	char	*h;
	short	l;
	short	c;

	h = ft_strnew(5);
	l = 0;
	while (l != 4)
	{
		c = 0;
		while (c != 4)
		{
			if (blok[l][c] == '#' && ft_strlen(h) < 4)
			if ((blok[l][c] != '.' && blok[l][c] != '#') || ft_strlen(h) > 4)
			{
				ft_strdel(&h);
				return (NULL);
			}
			c++;
		}
		l++;
	}
	return (h);
}

char	*ft_checktet(char **blok)
{
	char 	*h;
	int		hc;

	hc = 3;
	h = ft_get(blok);
	while (hc >= 0 &&  h != NULL)
	{
		if (ft_strchr(h, h[hc] + 4) == NULL && ft_strchr(h, h[hc] - 4) == NULL)
		{
			if (ft_strchr(h, h[hc] + 1) == NULL && h[hc] % 4 != 0)
			{
				if (ft_strchr(h, h[hc] - 1) == NULL && (h[hc] - 1) % 4 != 0)	
				{
					ft_strdel(&h);
					return (NULL);
				}
			}
		}
		hc--;
	}
	return (h);
}

int		ft_clean(char ***blok, int fd)
{
	free(*blok);
	*blok = NULL;
	close(fd);
	return (0);
}
/* bcount is a temp var wich returns the number if test;
   will be replaced by simply counting the number of tets in the tet-array in main;*/

int		ft_isvalid(char ***tetarr, int fd)
{
	int		len;
	int		bcount;
	int		lcount;
	int		ret;
	char	**blok;

	lcount = 0;
	bcount = 0;
	ret = 1;
	blok = ft_memalloc(sizeof(char *) * 5);
	while (ret == 1)
	{
		ret = get_next_line(fd, &blok[lcount]);
		len = ft_strlen(blok[lcount]);
		ft_putendl(blok[lcount]);
		if (len == 4 && lcount != 4)
			lcount++;
		else if (len == 0 && lcount == 4)
		{
			tetarr[0][bcount] = ft_checktet(blok);
			while (lcount > 0)
				ft_strdel(&blok[lcount--]);
			bcount++;
		}
		else
			return (ft_clean(&blok, fd));
	}
	return (ft_clean(&blok, fd) + bcount);
}
